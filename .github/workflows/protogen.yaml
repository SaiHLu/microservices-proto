name: "Protocol Buffer Go Stubs Generation"
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
permissions: 
  contents: write
jobs:
  protoc:
    name: "Generate"
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install protoc and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.32.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Generate protobuf files
        run: |
          # Create output directory
          mkdir -p golang
          protoc --go_out=./golang --go_opt=paths=source_relative --go-grpc_out=./golang --go-grpc_opt=paths=source_relative ./**/*.proto
      - name: Initialize Go modules
        run: |
          cd golang
          for service in order payment shipping; do
            cd $service
            go mod init github.com/SaiHLu/microservices-proto/golang/$service
            go mod tidy
            cd ..
          done
          cd ..
      - name: Commit and tag changes
        run: |
          # Configure git
          git config --global user.email "saisailuhlaing@gmail.com"
          git config --global user.name "SaiHLu"
          
          # Get the default branch name (main/master)
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
          
          # Checkout to the default branch
          git checkout $DEFAULT_BRANCH
          
          # Add and commit changes
          git add .
          git commit -m "Generated protobuf files for all services"
          
          # Get tag version (for tag triggers)
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG_VERSION=${GITHUB_REF#refs/tags/}
          else
            # For non-tag triggers, generate a timestamp-based tag
            TAG_VERSION="dev-$(date +%Y%m%d%H%M%S)"
          fi
          
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          
          # Create and push tag
          git tag $TAG_VERSION
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/SaiHLu/microservices-proto.git
          git push origin $DEFAULT_BRANCH $TAG_VERSION
